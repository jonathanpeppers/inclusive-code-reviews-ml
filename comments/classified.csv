"text","isnegative"
"ship it!","0"
"tests failed","0"
"This sucks!","1"
"Ok, `Test MSBuild Mac` and `Test MSBuild for Devices Mac` might be a little better.","0"
"@github I figured this out friday, I think: https://github.com/xamarin/xamarin-android/pull/5597","0"
"Ignore above, it was a `net6.0-android` app.","0"
"When testing `net7.0-android` apps, Debug builds work","0"
"You are so terrible","1"
"This is terrible","1"
"I have a feeling that NuGet authors will have to use `monoandroid10.0` for their directory names...","0"
"You are a failure.","1"
"There are test failures.","0"
"The test failed with: compiler error on line 12","0"
"The one performance test that failed, I don't see anything related to this change","0"
"Did this just get pasted twice?","0"
"I believe I was only seeing the problem in an earlier incarnation of https://github.com/xamarin/monodroid/pull/1205.","0"
"It seems both the startup & MSBuild perf tests fail to build, which is odd.","0"
"I vehemently disagree with this","1"
"Can we do something smarter than this?","1"
"I don't like this solution.","1"
"You can do this like this instead.","0"
"Have you even tested this code before submitting?","1"
"🤮","1"
"😠","1"
"😡","1"
"This is just sh*t.","1"
"The conflict I get is due to stupid new gcc header file crap.","1"
"But what makes me upset is that the crap is for completely bogus reasons.","1"
"The above code is sh*t, and it generates shit code.","1"
"It looks bad, and there's no reason for it.","1"
"Give me *one* reason why it was written in that idiotic way with two different conditionals, and a shiny new nonstandard function that wants particular compiler support to generate even half-way sane code, and even then generates worse code?","1"
"I love it!","0"
"So good","0"
"Amazing","0"
"Looks good to me","0"
"LGTM","0"
"Great Job!","0"
"Does this work?","0"
"It looks like a test failed","0"
"This is not compiling","0"
"Make sure that you compile before creating the pull request","0"
"Unrelated test failures","0"
"/azp run","0"
"Please add in the labels","0"
"This does not work","0"
"There is a bug in the code","0"
"Please wait to merge this","0"
"You need to revert this commit","0"
"THIS IS AWESOME","0"
"THIS IS PERFECT","0"
"This is a great improvement","0"
"Let's see if the tests pass","0"
"This may fail a test","0"
"This will help a lot of people","0"
"I think you should go another route","0"
"LGTM","0"
"Don't give up","0"
"This is much better","0"
"This is an improvement","0"
"You are a saint","0"
"Thank you!","0"
"This is not exactly what we want","0"
"This is a slightly better way to do this","0"
"Removing this","0"
"You can close this for now","0"
"Reopening this PR","0"
"Please ignore this PR","0"
"DO NOT MERGE","1"
"Add the DO NOT MERGE label if it's not ready yet!","0"
"I hate this change","1"
"Customers will hate this","1"
"This CI sucks","1"
"Change this now","1"
"I will change this now - thank you for the feedback","0"
"This is below your level","1"
"Did a child write this?","1"
"You can't make this any better?","1"
"This is not what we want","1"
"Just let me do this","1"
"You can't do anything right can you?","1"
"Everything is wrong","1"
"Stop that","1"
"Just quit","1"
"Kill this","1"
"Close this PR","1"
"I missed this earlier","0"
"This is a breaking change","0"
"There is a version mismatch","0"
"The thread was aborted","0"
"The memory is corrupted","0"
"It's throwing an exception","0"
"It's about the Invalid IL code","0"
"There appears to be a stack misalignment","0"
"The weak reference object will get cleared","0"
"This code is garbage","1"
"Did you account for garbage collection?","0"
"Can't you do better?","1"
"This is messy","1"
"I learned something new!","0"
"I didn't know that","0"
"This is great test coverage","0"
"This is pretty gross","1"
"There's nothing pretty about this","1"
"This is very pretty code!","0"
"It isn't working","0"
"This isn't worth my time","1"
"It just doesn't make sense","1"
"It just doesn't make sense to me how awesome this is","0"
"It will kill a lot of businesses","1"
"This in particular is a mess","1"
"I'm not counting on it working","1"
"At this point, this is absolutely not ready for real-world use","1"
"We are in a really bad place at the minute","1"
"it is so frustrating","1"
"that kills trust","1"
"adding the bot here would help detecting such major issues","0"
"that only goes so far","1"
"it isn't good enough","1"
"it isn't good enough to just write code, but what you've done here with your comprehensive documentation and test coverage is exemplary","0"
"what you're proposing will effectively just make things more difficult","1"
"sometimes nasty bugs can be introduced","1"
"it's not going to help","1"
"Damage has been done","1"
"I will ignore your code","1"
"Feel free to ignore that platform for now","0"
"It's going to ignore the scheme","0"
"Maybe you should get an education","1"
"You don't know what's going on","1"
"You should start with a bullet to the brain","1"
"This is on the blacklist, how could you miss that","1"
"This is on the block list, it's always a good idea to double-check!","0"
"They're a blackhat so their code isn't worth it","1"
"They're an unethical hacker so be cautious about their code","0"
"Be inclusive of the minority because they need help","1"
"Be inclusive of marginalized groups because that is the right thing to do","0"
"good job guys you ruined it","1"
"good job team keep up the good work","0"
"let's do a little more housekeeping here it's quite messy","1"
"let's do a little more cleanup here to improve the formatting further","0"
"you're so OCD why are you like this","1"
"you're so organized I'm very impressed","0"
"the behavior is crazy why are you doing this","1"
"the behavior is unpredictable","0"
"accessibility helps a handicapped person but it's otherwise useless","1"
"accessibility helps a person with disabilities but also everyone else","0"
"my computer is hanging ugh it's your fault","1"
"my computer is frozen","0"
"this is some grandfather code we'll be updating because it's so old and ugly","1"
"this is some rollover code we'll be updating","0"
"nice dummy values! but not nice enough","1"
"nice sample values!","0"
"this is on my to-do list","0"
"Don't do a half-ass job","1"
"We always want to make things better.","0"
"Maybe it's better to do this in another way?","0"
"Do this in another way!","1"
"Your code is completely wrong","1"
"I don't like this solution.","1"
"You're not the best developer here","1"
"After discussion with the team, we came to the conclusion that's better to do it this way.","0"
"Do it this way, because I know best","1"
"Every line of code you write is a nail in my coffin","1"
"This is rubbish","1"
"This is toy code","1"
"How long did you spend working on this?","1"
"What are you doing?","1"
"You know this doesn't work like that, right?","1"
"Can you explain what you are trying to accomplish?","0"
"Can you explain how it works?","0"
"I don't think this looks right, but I could be wrong. Could you explain what this is supposed to be doing?","0"
"This is great!","0"
"I love this","0"
"This is a great solution","0"
"I would never have thought of doing it this way","0"
"Perfect","0"
"Lovely","0"
"I love this idea","0"
"This Is Wrong","1"
"You're not good at this","1"
"Everything you do is bad","1"
"Everything looks great","0"
"This code was terrible, I'm so happy you made it better!","0"
"This code is terrible","1"
"This code was terrible","0"
"Good job","0"
"This caused a test failure","0"
"You're a failure","1"
"This made some tests fail","0"
"You failed","1"
"This needs some tests","0"
"You should have added tests","1"
"This fixes a problem where the mortality rate in the nursery was too high","0"
"This fixes a problem","0"
"Sigh","1"
"This is dead code","0"
"You're dead","1"
"This will cause infinite recursion","0"
"Software engineering is not for you","1"
"This is obviously wrong","1"
"Why don't you just skip this step","1"
"Ok, `Test MSBuild Mac` and `Test MSBuild for Devices Mac` might be a little better.",0
"@github I figured this out friday, I think: https://github.com/xamarin/xamarin-android/pull/5597",0
"Ignore above, it was a `net6.0-android` app. When testing `net7.0-android` apps, Debug builds work.",0
But a `Release` build logs this and then crashes after:,0
`ndk-stack` gives:,0
Full log: [adb.txt](https://github.com/xamarin/xamarin-android/files/8643599/adb.txt),0
"I have a feeling that NuGet authors will have to use `monoandroid10.0` for their directory names... where they have been used to using `monoandroid81`, `monoandroid90`, etc.",0
The target that uses the `@(Import)` item group doesn't run if you set `$(DisableImplicitNamespaceImports)`:,0
https://github.com/dotnet/sdk/blob/93b432bd8e73bb68aa4621db8a967d62e6f0cc23/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.GenerateImplicitNamespaceImports.targets#L35-L38,0
Here is the commit that implements this:,0
https://github.com/dotnet/sdk/commit/85943958e5a01d6bbd39a947aec2a4a37b8ba7cf,0
"The one performance test that failed, I don't see anything related to this change:",0
"`<D8/>` or `<R8/>` didn't run, so going to merge.",0
/azp run,0
Did this just get pasted twice?,0
"As per the bug we were seeing with `WorkingDirectory` and `<Aapt2Link/>`, I think this needs to be:",0
"After using `IndexOf` + `Substring`, I think it's still OK to just compare `targetFrameworkIdentifier == ""MonoAndroid""`:",0
"It should be the first instance of `,` and `targetFrameworkIdentifier` will be everything before it.",0
The issue in https://github.com/xamarin/xamarin-android/pull/5991#issuecomment-854216388 should be working now.,0
I believe I was only seeing the problem in an earlier incarnation of https://github.com/xamarin/monodroid/pull/1205.,0
"I can't find anything sensible to do here, `$([System.Version]::Parse())` or `$([MSBuild]:VersionGreaterThanOrEquals())` throw during evaluation.",0
"I think adding the test case is fine for now, and you would get the above error from `NuGet.targets`?",0
"@github there is something else weird here, but I think it's our test.",0
"The cases where macOS failed, it seems like `usesAssemblyStore=false`. So how would this class know to check if the files exist in that case?",0
https://github.com/xamarin/xamarin-android/blob/968c4245d3bb24670f402eb207109ca837fdd195/src/Xamarin.Android.Build.Tasks/Tests/Xamarin.Android.Build.Tests/XASdkTests.cs#L634-L638,0
Let's look into this again if it fails like this later...,0
I was mainly trying to get the build log shorter 👀,0
"It seems both the startup & MSBuild perf tests fail to build, which is odd.",0
Are there some more of these? If I ignore tests:,0
"Since https://github.com/xamarin/xamarin-android/commit/e390702773365ffe3da975181d0aa398d42731d0 we dropped support for referencing exe's at the MSBuild level. I didn't add support for it here, but if there is some scenario you think we'll hit, I can add it.",0
Offhand I can't think of a case where a `.dll` would reference a random `.exe`?,0
/azp run,0
"I tried to test these changes on an API 19 emulator, but ran into: https://github.com/xamarin/monodroid/issues/1161",0
"You can have an `.aar` with resources, then you might want to use `Resource.designer.cs` values from C#.",0
"So I don't think we need this by default, but it's there if you need to turn it off.",0
An idea that could be done in a future iteration.,0
Could this step also modify this class:,0
https://github.com/xamarin/xamarin-android/blob/7ba62bac5a25eb783a6da9c2b6a989a820695a1f/src/Mono.Android/Android.Runtime/ResourceIdManager.cs#L6-L9,0
"If `UpdateIdValues()` was a completely empty method, some reflection could be skipped at startup.",0
same here:,0
Should we make this a `Regex` just in case the version number changes? If this just removed an entire line that matches: `^\/\/\s*Runtime Version:`,0
I'll list `@(EmbeddedNativeLibrary)`.,0
We are aspiring to change all these to:,0
/azp run,0
"I think the code is the same, the first one would be the same as doing:",0
"I've heard putting `() => ProcessManifestTemplate()` prevents a delegate object from being created, but that performance shouldn't be needed here.",0
My plan was to not import or ship `Xamarin.Android.Aapt.targets` at all:,0
https://github.com/xamarin/xamarin-android/blob/02e86b5a6bbd6f938c16cf30bc709543565bb34e/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L364-L365,0
"However this is wrong ☝️ , it needs to be checking `$(UsingAndroidNETSdk)` instead.",1
This should also work:,0
https://github.com/xamarin/xamarin-android/blob/91b66985704f1592b8c55819f7ff48d5e7353900/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L1160-L1161,0
Fixed the ones in xamarin-android here: https://github.com/xamarin/xamarin-android/pull/5636,0
/azp run,0
NOTE: two `!*Darwin*` and `!*32*` won't currently work -- there is a bug in AzDO.,0
Since this could be a 4MB string:,0
https://github.com/xamarin/xamarin-android/blob/c98cb40f35a208c04466bb3fccb3cd25d463781c/build-tools/scripts/TestApks.targets#L94-L100,0
Do you think it's worth making a `GetLogcatOutput` method that would write each line to a file at a time? Instead of making a giant string?,0
"The designer tests keep failing on NuGet restore, I think we can ignore:",0
This looks OK:,0
* Designer macOS has been failing since last week on master,0
* The one test failure is unrelated: `warning XARDF7024: System.IO.IOException: The directory is not empty.`,0
Should we consider making this the default for all projects?,0
We already do it for .NET 6:,0
https://github.com/xamarin/xamarin-android/blob/885b57bdcf32e559961b183e1537844c5aa8143e/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.DefaultProperties.props#L13,0
Does this need to check some MSBuild property to skip it? Would it attempt to sign packages on Mac locally otherwise?,0
Could not AOT the assembly: System.Core.dll,0
"This looks similar to some of the file locking issues we see on the bots, since it passes for me locally, let me do a retry.",0
"So this will probably need to use TryGetValue now, somehow NUnit had a custom dictionary before that returned null when the key was not found?",0
"Thanks to Pobst, it should go through here now: https://github.com/xamarin/xamarin-android/blob/1bee4ad176863bdfc0de258542a2c3685fc60f2d/src/Xamarin.Android.Build.Tasks/Tasks/AndroidTask.cs#L16-L21",0
"I think using the default ""let it throw"" behavior is better now as long as this subclasses `AndroidTask`.",0
The spec says the native platform files always win:,0
https://github.com/xamarin/xamarin-android/blob/main/Documentation/guides/OneDotNetSingleProject.md,0
"If you want to use the MSBuild properties, you can just leave the values blank in `Info.plist` or `AndroidManifest.xml` (or whatever the WinUI version is). You can still set MSBuild properties in `.csproj` files and override their values from CI.",0
I updated the test case some -- it needs to set all the properties to weird values so we see who wins.,0
I think this should be:,0
So that users can override it in their `.csproj` file.,0
Do we need this in every project? Can we put it in a new `Directory.Build.props` or `Configuration.props`?,0
maybe this would be cleaner as:,0
"This is the only one I didn't address, I agree I would rather use `System.Xml.Linq`, too.",0
I just didn't think it was worth rewriting all this code--but if we were going to change the file drastically or something it might be worth it.,0
`Xamarin.Android.Common.props` should be imported here already.,0
Could simplify this line:,0
/azp run,0
The quoted stuff was all from:,0
👍 I'll indent it.,0
@github I bet this `UseSharedRuntime ?` check was important...,0
I need to look at what is in the typemaps in both cases.,0
"Right so we only should check if `$(TargetPath)` changes, and is newer than a stamp file or something.",0
Something like (_untested_):,0
This should make the second call skip `AfterBuild` if the assembly didn't change.,0
"When I build `Xamarin.Android.sln`, I rarely change `Mono.Android.csproj` when working on MSBuild-related stuff. This should save ~3 seconds from my dev-loop.",0
/azp run,0
"Sounds good, we can leave `-m:1` for now.",0
I don't think you need to set `$(LangVersion)` with `$(LangVersion)`.,0
"This imports `Configuration.props`, so I think it would get the value you want;",0
https://github.com/xamarin/xamarin-android/blob/1877dd5ebee90452c6ab2cc33a58498a83ea7c1f/Configuration.props#L38,0
Should we give an example in the commit message what the problem here was?,0
We somehow lost the `KnownPackages.Acr_UserDialogs` NuGet in this file: https://github.com/xamarin/xamarin-android/commit/1d608bf194f5cddcb4d61a4bca3602f920da5246#diff-4469ed45319624df448a82ed4bc98b6d,0
"I think we don't need it on this one, though. `<Touch/>` is called right before?",0
"It would be nice if this had the full strack trace here, but we just have `.Message`:",0
https://github.com/xamarin/XamarinComponents/blob/4f5a57bd567f46f4b67622ab718b50485725463f/Util/Xamarin.Build.Download/source/Xamarin.Build.Download/XamarinDownloadArchives.cs#L182,0
Whoops I think this one should be the new `XamarinFormsAndroidApplicationProject`.,0
"Since this breaks things, I don't think it is important enough to continue.",0
I'll leave the branch around if we ever want to try this again.,0
/azp run,0
"To test this currently, you would need: [MonoAOTCompiler.zip](https://github.com/xamarin/xamarin-android/files/6804264/MonoAOTCompiler.zip)",0
Copy `MonoAOTCompiler.dll` to `~\android-toolchain\dotnet\packs\Microsoft.NET.Runtime.MonoAOTCompiler.Task\6.0.0-preview.7.*\tasks\net6.0`. This will be needed until the changes land in dotnet/runtime and flow to us.,0
"If I remove it, I get:",0
"We might want to just compare `Name`, if we want this to work the same as `[assembly:LinkerSafeAttribute]`: https://github.com/mono/linker/blob/44199a2c62ff221f92c33cbb4ee3e35588adaf4a/tuner/Mono.Tuner/CustomizeActions.cs#L47",0
"This would give the option to add this to the support libraries, and not have to build with a new (not yet released) Xamarin.Android.",0
"I added `XA0035`, which seems a lot better.",0
Does this need all 4 steps here? or can it just call `Install`?,0
Do you really need all three of these? Are we missing a dependency where you should be able to put `Xamarin.AndroidX.Wear` and that's it?,0
"Ok, the build is broken because the `.pkg` file isn't being created by this project now.",0
"I think you need to import `Configuration.props` otherwise, this target won't run because `$(HostOS)` is blank:",0
https://github.com/xamarin/xamarin-android/blob/d17ea01b4036c2592ae247b24af14739d949f245/build-tools/create-pkg/create-pkg.targets#L148-L150,0
I think I should just remove all the `goto` here and put `return proxy` instead.,0
"I saw this message ~2700 times in a build log. It is still logging the *other* case, which I think is sufficient.",0
I updated the commit message around this conversation 👍,0
/azp run,0
Right now I don't think you can use LLVM without having an NDK -- but I was thinking we could fix that? Like it should be possible to work?,0
"If you didn't need the NDK, we could enable LLVM by default for `Release` builds to improve startup times.",0
It might be this was just something broken on mono/master:,0
It looks like they moved the submodule? So maybe it's in `external\llvm-project` now?,0
https://github.com/mono/mono/tree/a2f9fb77a3704049ffe5de32362029ece154ee4c/external,0
"I am building a mono archive based off 2019-10, will give that a try.",0
We don't have darc in this repo at all yet. Putting the version number in `Configuration.props` follows our current pattern until that is in place.,0
"@github will be looking into darc, I think. We can start with getting it to bump the dotnet/sdk version.",0
I think all these `/t:Restore` should just use `/restore` instead:,0
"Both will probably work in this case, but I've seen some weird things if you run the `Restore` target first followed with `,Build,Etc`.",0
"When I last attempted to split up `<GenerateJavaStubs/>`, it hurt performance a bit, I had to move the `DirectoryAssemblyResolver` to be stored in `RegisterTaskObject` so it could be shared across multiple tasks:",0
https://github.com/xamarin/xamarin-android/compare/master...jonathanpeppers:split-generatejavastubs,0
"This branch isn't quite finished, the `AndroidManifest.xml` portion is broken.",0
I think we do need the `eol` setting: https://git-scm.com/docs/gitattributes#Documentation/gitattributes.txt-Settostringvaluecrlf,0
To test this I did:,0
And then it switches to Windows line endings when I look in notepad++:,0
"Using just `text`, and trying again--it didn't work.",0
But the docs aren't exactly clear if someone else knows better?,0
"This one could also use `TryGetValue`, sorry I didn't see it before.",0
👍 I guess we weren't doing that at all before???,0
"Instead of reading the file back into memory, could we make a helper method that logs and writes for each call?",0
Something like:,0
"The build failures look to be on master, too: apk sizes, tls tests, designer, libZipSharp/DotNetPackageXASdkProject test.",0
"I reworked the task, so it only writes the file when needed.",0
attempting to extract @(EmbeddedResource)s when an assembly doesn't have any.,0
Maybe I need to see if this can work without any assembly-level attributes at all.,0
`.Any()`,0
"@github in https://github.com/xamarin/xamarin-android/pull/6539 I remember some LLVM tests failed when I tried, but there are other changes in xamarin-android/main now. Could the LLVM-IR support @github added make this work now?",0
"If you're testing, and LLVM is working without an NDK let's try it.",0
/azp run,0
"Does this need to check `$(HostOS)` and use either: `osx-x64`, `windows-x64`, or `linux-x64`?",0
Is there a way this could check for `<= 32` then use 32? Trying to think of what this would look like over time as more API levels are added.,0
"I think this might need to check if it is blank, like it does in .NET 6:",0
https://github.com/xamarin/xamarin-android/blob/d4da1c252f45c4910abc1bd9e5be9ecf9dc683a0/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.DefaultProperties.targets#L13,0
This way you can set it to `false`.,0
I agree with the concern here: https://github.com/xamarin/xamarin-android/pull/6541#issuecomment-985045429,0
"If this is `sealed`, how do you implement ""ssl pinning"" in an app?",0
"👍  I haven't seen this syntax yet, seems better than this:",0
@github do you want to try setting `$(XamarinBuildDownloadDir)` to a folder in `bin/TestDebug/temp/{TestName}`?,0
https://github.com/xamarin/XamarinComponents/blob/4f5a57bd567f46f4b67622ab718b50485725463f/Util/Xamarin.Build.Download/source/Xamarin.Build.Download/Xamarin.Build.Download.targets#L9,0
"Then when it retries, I think it could start with a fresh empty directory.",0
Should this entire file go in this `DotNet5.md`?,0
https://github.com/xamarin/xamarin-android/blob/master/Documentation/guides/DotNet5.md,0
Then maybe we don't even need a `README.md` here?,0
Maybe we should use `InetAccess` instead? Would all `InetAccess` tests fail without crypto?,0
I'm feeling as the number of MSBuild files start to grow...,0
@github do you think we should start putting a short comment/description at the top of each new MSBuild file to explain what the file is?,0
"So we would want just a short sentence explaining the difference between `App.Runtime.proj` and `App.Ref.proj`? `Xamarin.Android.Lite.proj`, too?",0
"If I made a `Xamarin.Android.BuildOrder.targets` the name is almost self-explanatory, but would probably be helpful to say ""this is where all `$(FooDependsOn)` properties go"".",0
@github it looks like @github looked at these codes? https://github.com/xamarin/xamarin-android/pull/2258,0
"They weren't ""actionable""?",0
"So this appears to only be broken for specifically API 29, because it isn't listed here:",0
https://github.com/xamarin/xamarin-android-tools/blob/2d3690e428c8523b3779f84e5c804d1fd3c0d6fe/src/Xamarin.Android.Tools.AndroidSdk/AndroidVersions.cs#L139-L176,0
"So the question is, do we ship all the `AndroidApiInfo.xml` or update this list?",0
"I see a new version `6.0.100-preview.2.21155.2`, waiting to see if that is what we should bump to.",0
I'm curious can remove `$(AssemblyName)` here and it uses the name of the `.csproj` file?,0
"From the `.apkdesc` files we have, it looked like this file was renamed:",0
"I think NuGet always puts `31.0` for all of `net6.0-android`, `net6.0-android31`, `net6.0-android31.0`.",0
"It looks like this project links in a few files from `Java.Interop.Tools.Cecil`, can you add a new file here:",0
https://github.com/xamarin/xamarin-android/blob/af7f7f5da475c5cb8d2d725d77082ba7915bbc7e/src/Microsoft.Android.Sdk.ILLink/Microsoft.Android.Sdk.ILLink.csproj#L43-L46,0
"We probably should make this a regular project reference, but you don't have to do that here -- we can do it later.",0
Should I create an issue and link that in the binding?,0
Thanks!,0
Will merge after issues with main are resolved!,0
@github  @github Would these need this variable too when we move out of .NET6?,0
Again in that file here:,0
"@github  Ah good catch! I didn't realize I was calling the same method... The reason I made this change is that the SetHighlightedItemForProperty (int property, int identifier) is Obsolete and suggests that I use this one - which in this case does not make sense. Should I in fact continue to use the obsoleted one?",0
Updating to fix unrelated failure: https://github.com/xamarin/maccore/issues/2472,0
"Thanks for catching these, I followed Sebastian's advice about removing the [Introduced] attribute and removing the messages that don't give us much info in the Enums.cs file but not this one. If the documentation does not give a good method to use instead, would I just clear the entire message for these as well? In this case, there are other functions that can fetch assets using different types of parameters. Should I say something along the lines of ""Use other fetchasset methods""?",0
"I thought these were better to give us more detailed exceptions, but the compiler does not recognize these `ObjCRuntime.ThrowHelper.ThrowArgumentNullException`s as ending the method so I kept the old one at the end of the method...",0
Merging since the test failures are unrelated timeouts!,0
@github @github AH okay thank you both for the explanations! I will get right on this :),0
"I can create a LPLinkView with the size 5,5 at dimensions 5,5",0
I noticed the OneLocBuild task has failing due to the PAT in a different branch while testing this.,0
Connor was able to fix it!,0
Turning this into a draft since we will need more discussion on this before moving forward!,0
"Update: still testing on my end, for some reason @github 's solution isn't working on my end.. Sounds like it is working for others though.",0
Working on a test for this now!,0
"While I realize that I added a good amount of these and that SetData () throws an exception if the value arg is null, I thought it would be better to explicitly add the exceptions here and not use a `!`, but I am open to opinions!",0
"I will make a comment of this too, but the reasoning is a little confusing to me. I remember I could not build the file and @github may remember, but there is a file src/Photos/PHAssetChangeRequest.cs that has an Obsolete attribute in the PHAssetChangeRequest empty constructor and we deemed that is what was causing the build issue. However, now I am confused because this class is PHChangeRequest and not PHAssetChangeRequest. I can talk to Alex about this tomorrow and get back to you with more clarification.",0
Does this look okay?,0
@github @github  does `Microsoft.Nnyeah` meet all these criteria? Also could this change be in a separate PR?,0
@github So I just tried to apply the mac attributes to this one and a few of them below that say they are available for mac as well and they were getting a lot of compile errors.,0
It turns out that these are the questionable interfaces in this src/quicklook.cs,0
It turns out that they are also in src/quicklookui.cs and are all decorated with mac attributes already.,0
Do you think this could be leading to the issue?,0
[Here is the gist](https://gist.github.com/tj-devel709/03492abdf722192da23b84ae921f7e05) with the errors that marking mac for each of these interfaces show,0
I'll just leave the action in!,0
"@github There was no MacCatalyst.todo, but most of these interfaces say they support MacCatalyst in the web docs.",0
I tried including the HomeKit in the MacCatalyst section of the frameworks.source file and I kept getting this error in the build:,0
Is this something I should do?,0
"Are enums int by default? If so, is there a reason to declare int?",0
Right now it is set as a property though and properties don't need a verb correct? I can revert to a method though.,0
"Okay, applied!",0
Maybe,0
"nit, small extra space",1
How about `WeakExternalPlaybackVideoGravity = value.HasValue ? AVPlayerLayer.EnumToKey (value.Value)! : null!;`,0
dont link/Mac Catalyst [dotnet]/Release [dotnet]: TimedOut (Execution timed out after 1200 seconds.,0
No test log file was produced),0
link sdk/tvOS - simulator/Debug: Failed,0
link sdk/tvOS - simulator/Release: Failed,0
**Unrelated Test Failure**,0
Good catch! Removing now!,0
small also,0
nit: missing new line,0
"So I'm not sure if this is sufficient but I included Mac in an iOS Xcode project (which I think is how you enable Mac Catalyst), included HomeKit, and then called some things that are supported in Mac Catalyst (14,0) according to the web docs and Xcode does not complain about it!",0
lol,0
Looks like extra indentation here,0
"Oops sorry, actually forgot it haha",0
Thanks for explaining! :),0
@github that is a great question... Yeah this is the generated method signature:,0
And CategoryToToken says it returns an `NSString?`,0
Although there are no compiler warnings/errors regarding this..,0
Should we be replacing this `#if XAMCORE_4_0` with an `#if NET`?,0
@github maybe just an if statement inside that makes those changes ~ adds watch to the legacy and doesn't go though the platforms for the dotnet_iOS_MacCatalyst?,0
Unrelated failing test: https://github.com/xamarin/maccore/issues/2434,0
"So I actually don't who told me to add the Sealed, perhaps @github ?",0
"But when I remove it, I get these build errors: https://gist.github.com/tj-devel709/d459d9e717a186486deab6479f57c050",0
Sebastien recommended that we change the ArgumentNullException's as well in these Nullability PRs,0
It's the first time I remember seeing `|=` cool haha,0
Same here,0
What does this line do?,0
There a few others as well!,0
* accidentally pulled xamarin/main. Trying to revert merge. Added do-not-merge for now,0
"Oops forgot to run tests, I'll do that now",0
Maybe typo?,0
nit: extra new line,0
Oh okay yeah sure that makes sense!,0
Looks like Sebastien's test fails when these are removed so maybe they are needed:,0
perhaps 'duplicated'?,0
Thanks!,0
Enum value looks strange,0
You can add the iOS availability on enums and their individual values too.,0
"Automatic,",0
"AutomaticOutLine,",0
"Also just a small thing but add a comma after the AutomaticOutLine so that if anyone else ever adds something to your enum, their name won't show up in the blame and seem like they added that value. Great job! :)",0
"The above changes were to account for `NLLanguageExtensions.GetConstant (item.Key)` possibly being null, but not sure if all this was neccessary",0
Closing this PR in favor of: https://github.com/xamarin/xamarin-macios/pull/14394,0
"This one was having test failures that I was waiting on, but a new (weekly) version of the localization PRs came out which includes all the changes in this PR and more!",0
"OK, let's YOLO this 😁",0
Sounds good 😂,0
@github changes look good. Interestingly all the ignored enums and functions are in all platforms supported by the framework. There is an option to create a single ignore file that uses common-* as the prefix rather than the platform name. Food for though 😉,0
@github  Would you recommend that I change it to common? Would it still be okay in common if it doesn't cover watchOS also?,0
Flagging just in case since lowest supported is 10.14,0
Flagging this just in case - not supported iOS version in .NET,0
**Unrelated test failure**,0
monotouch-test/tvOS - simulator/Debug: Failed,0
**Unrelated Test Failure**,0
Updating to fix this unrelated issue: https://github.com/xamarin/maccore/issues/2472,0
**Unrelated Test Failures**,0
These paths are incorrect - WIP,0
Will do!,0
"This is cool, I didn't know we could do this",0
Merging since the test failures are unrelated timeouts!,0
"Oh gosh, I really messed that up ☝️",0
"Alex helped suggest that name since the comment on xcode is ""/// The handle for the person that will be displayed on the incoming call notification.""",0
@github hmmm what does the semicolon in this path name do?,0
Perhaps this will give me a clue on how the apidiff directory is being set?,0
"@github let me know if the json was tool generated, in that case ignore my comments.",0
Yes they were auto generated. The output used spaces instead of tabs though so it is possible that I messed up indentation when trying to use tabs to not show changes in Rolf's existing json,0
"Awesome, thanks @github !!",0
Do we want to remove these maccatalyst's?,0
"Sorry, my mistake, both test failures are unrelated:",0
"Also if I try (IList<string>) as a cast, I get this:",0
System.InvalidCastException : Specified cast is not valid.,0
small formatting,0
"Sorry, I don't think this one is actually ready for review. I think there are some things in the headers that were not mentioned by xtro that need updating!",0
small typo,0
That is a good point.,0
"How, if at all, does this relate to AutomationProperties?",0
"Nope, I don't think so. And yeah, the upgrade story is an interesting concept! Will have to look into that more, depending on how we decide to approach the package support for api 21/22",0
trying again now,0
"updated, thanks for the feedback!",0
@github told me blazor already has this type of theming via bootstrap styles,0
"should this also be MauiComboBox?",0
Thanks for the feedback @github! Opened an issue here https://github.com/dotnet/maui/issues/4766 - feel free to add more info,0
What is the expected updated behavior here?,0
will do!,0
"missing d",0
"I was told that it's best to use Brushes for Background colors and Colors everywhere else (cc @github) and yep, I added a bunch of colors/brushes that don't get used - exact colors are still a bit tentative, but I'll see what @github thinks for that",0
failing tests unrelated,0
The built-in platforms also use color for interactive controls,0
"nitpick typo fix that's been bothering me",1
fixing now - but can you remind me why the null check is sufficient for Android and not iOS?,0
"Hi, @github - what's ths issue you're seeing on iOS? Is it also the same error regarding `Xamarin.AndroidX.Security.SecurityCrypto` ?",0
"NRE is thrown now at https://github.com/dotnet/maui/blob/a6a535c59cca18c65cdc9e2aaf554c4eddfaa81a/src/Core/src/Hosting/AppHostBuilderExtensions.cs#L119 Placeholder looks great otherwise",0
"I put this sample code directly in my local version of the control gallery sample: It uses `<GridLayout RowDefinitions=""Auto,*, Auto"">` like the samples in the referenced issues do",0
See following comment first (I'm assuming this naming is related to `TapGestureRecognizerNeedsDelegate` which doesn't fully make sense to me),0
"fixed, thank you! 😂",0
still not working :(,0
Should we add more tests for the other shapes? Or is Ellipse sufficient?,0
TextColor is here to prevent issues wrt not implementing the full interface properly,0
We should also link to instructions on how people can obtain the logs so they can also just attach them here,0
"oops, yeah. removing the redundancy; thanks for the catch!",0
"@github there's a number of confusing NREs thrown on this branch that are unresolved. If you could take a look and share any tips you might have, that would be awesome!",0
"Why is it called ""QueryEditor"" and ""_editor""? Shouldn't it be ""entry""?",0
What's happening here? Why is it no longer async and what does the func() do that's different?,0
"I wonder how we can make this a bit more flexible, so that we get not just the platform but the specific API versions!",0
What is MaxLength=-1 expected to do?,0
and wherever it's used/referenced,0
"@github I fixed the ugly rebase! Build is failing now because Shadow is using Color and Size though, so that still needs to be fixed",1
"Can we use the same vars for consistency?`",0
"Ok, thanks! Changed it back. I hadn't been sure because I know both brushes and colors can be used for Background, and assumed it might be the same with Backgroundcolor",0
will do!,0
@github will try again... did you change the background color though? I wonder if that's related,0
can do!,0
"should we consider changing the default too? So that if a developer doesn't explicitly set a description, it'll still make sense?",0
Maybe we can do something similar to image where it simply can't receive focus at all and won't read out anything - maybe we can make it so just the contents are accessible?,0
"Or alternatively, we can try to make the textual contents or at least the first textual content get propagated upward",0
nice!,0
"We woud need to check what the screen reader behavior is - does the TalkBack focus move with the keyboard focus? If it's inconsistent, we need to figure out what the desired behavior is there. If it's consistent, then I think this is an OK solution",0
I agree! I just wanted to leave them for @github in case there are any we want to comment in before I delete them entirely,0
"Commented out because the values aren't clear yet and we want your opinions on what the values should be :)",0
"Similarly, for any controls/properties you don't see in this PR that you believe belong, please let me know which ones and which values you might see them with",0
"I think that's fair. We can get rid of the checkbox and rephrase so it says ""By submitting this issue, I am agreeing to follow this project's Code of Conduct""",1
"ah ok, makes sense! docs for `afterDescendants` was a big confusing and seemed right to me at first, since I was thinking the container should usually not receive any focus. But your explanation of ""consider first as a viable focus target"" helps clarify things",0
/azp run,0
typo fix that's been bothering me,1
done!,0
"sorry, I misread which APIs were being used - taking back what I said and seconding Shane here!",0
gotcha - will fix both here and in XCT soon,0
@github I tried that but it didn't work for me :/ will try again though,0
"Is the body correct? Is it related to CursorPosition and not SelectionLength?",0
Where did this 50 come from?,0
Should we maybe set this to ImportantForAccessibility.Auto instead of null?,0
"yep! We're trying to get the SearchView, and it looks like that TextView is being uesd as the SearchView. The SearchButton stuff we were using before was wrong / not quite relevant",0
"alpha version was incorporated, and code significantly simplified. security nuget still needs to be added to nuget feed, so waiting on that! in the meantime, if any folks are able to test on android api levels 21/22, that would be super helpful - thanks!",0
"missing d",0
@github font scaling will automatically be enabled across all the platforms including iOS now!,0
"Should we not set a background color on any pages then and just let the system handle that?",0
"My thinking was that the background should be light in light mode, dark in dark mode, and since `BackgroundColor` property is derived from VisualElement, which Page is based on, this is how I handled it. Most of the specific pages themselves (i.e. ContentPage) don't have stylable properties if not for those derived from Page and VisualElement",0
maybe we can at least have the mainpage code in comments?,0
"hmm I tested again, but it's the same :/",0
Could you share an example so that I can understand this better? I'm wondering why it's [`.BeforeDescendants`](https://developer.android.com/reference/android/view/ViewGroup#FOCUS_BEFORE_DESCENDANTS) instead of [`.AfterDescendants`](https://developer.android.com/reference/android/view/ViewGroup#FOCUS_AFTER_DESCENDANTS). Is the `nativeview` here the rootView or the contained views?,0
"@github yes definitely! so this PR does both of those things! It both: 1. Ensures font scaling will automatically be enabled across all the platforms including iOS 2. Introduces a `FontAutoScalingEnabled` boolean property that can be set to `false` if so desired",0
still seeing similar issues where hovering changes the color,0
"@github I agree that with this calculator sample specifically, gray might work better with the general color scheme. Unfortunately, the proposed colors aren't accessible so I think it would be best to keep the current colors which have already been tested and validated for accessibility via our templates. Naturally, different colors might look better with different samples and scenarios, and folks can always change these styles as they wish. If you want to use grays for the calculator sample, I recommend a light gray button on black background in dark mode! But again, for the templates, I think keeping the current button style (with regard to colors) is ideal in terms of accessibility.",0
Windows SearchBar MaxLength will need some more time https://github.com/dotnet/maui/issues/5669,0
AFAICT failing tests are unrelated,0
@github this is what @github was asking you for me about! wondering what a better way of doing this might be,0
same feedback applies to all the templates,0
why is this commented out? Should it be deleted?,0
Is TextColor not yet expected to work?,0
"yes, so shouldn't we be checking here that it's YES instead of AUTO?",0
"same issue as #741 again NRE is thrown now at https://github.com/dotnet/maui/blob/a6a535c59cca18c65cdc9e2aaf554c4eddfaa81a/src/Core/src/Hosting/AppHostBuilderExtensions.cs#L119",0
"Oo makes sense, thanks!!",0
Sample and device tests still need to be tested on iOS,0
"or just ""textField"" as before?",0
"@github yeah I did git clean -xfd :/ This is what shows up in the error list: Error	MSB3491	Could not write lines to file ""obj\staticwebassets.pack.sentinel"". The process cannot access the file 'C:\Users\rachelkang\maui1\src\Controls\samples\Controls.Sample\obj\staticwebassets.pack.sentinel' because it is being used by another process.	Maui.Controls.Sample	C:\Program Files\dotnet\sdk\6.0.300-preview.22154.4\Sdks\Microsoft.NET.Sdk.Razor\targets\Microsoft.NET.Sdk.Razor.StaticWebAssets.targets	429	",0
"nice var name 😂  ""whatDoIDo""",0
similar feedback applies to all dropdowns,0
